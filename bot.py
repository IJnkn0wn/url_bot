import telebot
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
try:
    with open('telegram_token.json', 'r') as f:
        token_data = json.load(f)
        BOT_TOKEN = token_data.get('token') or token_data.get('bot_token') or list(token_data.values())[0]
    logger.info("–¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
    # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å
    BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨"

bot = telebot.TeleBot(BOT_TOKEN)

# URL –≤–∞—à–µ–≥–æ GitHub Pages
WEB_APP_URL = "https://–í–ê–®_USERNAME.github.io/–í–ê–®_–†–ï–ü–û–ó–ò–¢–û–†–ò–ô/webapp.html"

@bot.message_handler(commands=['start', 'help'])
def start(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(
        text="üìä –û—Ç–∫—Ä—ã—Ç—å –Ø–Ω–¥–µ–∫—Å –¢–∞–±–ª–∏—Ü—ã", 
        web_app=telebot.types.WebAppInfo(url=WEB_APP_URL)
    ))
    
    bot.send_message(
        message.chat.id,
        "ü§ñ **–ë–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ø–Ω–¥–µ–∫—Å –¢–∞–±–ª–∏—Ü–∞–º–∏**\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å "
        "–¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ç–∞–±–ª–∏—Ü!\n\n"
        "‚ú® **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**\n"
        "1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n"
        "2. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å –¢–∞–±–ª–∏—Ü—É\n"
        "3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É\n"
        "4. –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è",
        parse_mode='Markdown',
        reply_markup=markup
    )

@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    try:
        data = json.loads(message.web_app_data.data)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")
        
        response_text = f"""
‚úÖ **–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!**

üìã **–õ–∏—Å—Ç:** `{data['sheet']}`
üë§ **–§–ò–û:** {data['fio']}
üìÖ **–î–∞—Ç–∞:** {data['date']}
‚è∞ **–í—Ä–µ–º—è:** {data['time']}
üéØ **–¢–µ–º–∞:** {data['topic']}
üìä **–°—Ç–∞—Ç—É—Å:** {data['status']}
üìù **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** {data['note']}

–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –≤–∞—à—É –Ø–Ω–¥–µ–∫—Å –¢–∞–±–ª–∏—Ü—É.
"""
        
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton(
            "üìä –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –¥–∞–Ω–Ω—ã–µ", 
            web_app=telebot.types.WebAppInfo(url=WEB_APP_URL)
        ))
        
        bot.send_message(
            message.chat.id,
            response_text,
            parse_mode='Markdown',
            reply_markup=markup
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö")

@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    if message.text.lower() in ["—Ç–∞–±–ª–∏—Ü—ã", "—Ñ–æ—Ä–º–∞", "–∑–∞–ø–æ–ª–Ω–∏—Ç—å", "webapp"]:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton(
            "üìä –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", 
            web_app=telebot.types.WebAppInfo(url=WEB_APP_URL)
        ))
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã")

if __name__ == "__main__":
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    logger.info(f"üåê Web App URL: {WEB_APP_URL}")
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
